// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// blumb_blumb_shub
NumericVector blumb_blumb_shub(int seed, int p, int q, int n);
RcppExport SEXP _randngen_blumb_blumb_shub(SEXP seedSEXP, SEXP pSEXP, SEXP qSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(blumb_blumb_shub(seed, p, q, n));
    return rcpp_result_gen;
END_RCPP
}
// cmwc
NumericVector cmwc(long long seed, int n, int r, int bitsize, int a, int c);
RcppExport SEXP _randngen_cmwc(SEXP seedSEXP, SEXP nSEXP, SEXP rSEXP, SEXP bitsizeSEXP, SEXP aSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< long long >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type bitsize(bitsizeSEXP);
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(cmwc(seed, n, r, bitsize, a, c));
    return rcpp_result_gen;
END_RCPP
}
// icg
NumericVector icg(int q, int a, int c, int seed, int n);
RcppExport SEXP _randngen_icg(SEXP qSEXP, SEXP aSEXP, SEXP cSEXP, SEXP seedSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(icg(q, a, c, seed, n));
    return rcpp_result_gen;
END_RCPP
}
// lcg
NumericVector lcg(int seed, int n, long long m, long long a, long long c);
RcppExport SEXP _randngen_lcg(SEXP seedSEXP, SEXP nSEXP, SEXP mSEXP, SEXP aSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< long long >::type m(mSEXP);
    Rcpp::traits::input_parameter< long long >::type a(aSEXP);
    Rcpp::traits::input_parameter< long long >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(lcg(seed, n, m, a, c));
    return rcpp_result_gen;
END_RCPP
}
// lcg_internal
NumericVector lcg_internal(int seed, int n);
RcppExport SEXP _randngen_lcg_internal(SEXP seedSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(lcg_internal(seed, n));
    return rcpp_result_gen;
END_RCPP
}
// lcg_parkmiller
NumericVector lcg_parkmiller(int seed, int n);
RcppExport SEXP _randngen_lcg_parkmiller(SEXP seedSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(lcg_parkmiller(seed, n));
    return rcpp_result_gen;
END_RCPP
}
// lfg
NumericVector lfg(int n, int j, int k, int bitsize, char operation);
RcppExport SEXP _randngen_lfg(SEXP nSEXP, SEXP jSEXP, SEXP kSEXP, SEXP bitsizeSEXP, SEXP operationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type bitsize(bitsizeSEXP);
    Rcpp::traits::input_parameter< char >::type operation(operationSEXP);
    rcpp_result_gen = Rcpp::wrap(lfg(n, j, k, bitsize, operation));
    return rcpp_result_gen;
END_RCPP
}
// lfsr_fib
NumericVector lfsr_fib(long long seed, int n, int bitsize, NumericVector taps);
RcppExport SEXP _randngen_lfsr_fib(SEXP seedSEXP, SEXP nSEXP, SEXP bitsizeSEXP, SEXP tapsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< long long >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type bitsize(bitsizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type taps(tapsSEXP);
    rcpp_result_gen = Rcpp::wrap(lfsr_fib(seed, n, bitsize, taps));
    return rcpp_result_gen;
END_RCPP
}
// lfsr_galois
NumericVector lfsr_galois(long long seed, int n, int bitsize, NumericVector taps);
RcppExport SEXP _randngen_lfsr_galois(SEXP seedSEXP, SEXP nSEXP, SEXP bitsizeSEXP, SEXP tapsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< long long >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type bitsize(bitsizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type taps(tapsSEXP);
    rcpp_result_gen = Rcpp::wrap(lfsr_galois(seed, n, bitsize, taps));
    return rcpp_result_gen;
END_RCPP
}
// lfsr_xorshift
NumericVector lfsr_xorshift(long long seed, int n, int bitsize, NumericVector taps);
RcppExport SEXP _randngen_lfsr_xorshift(SEXP seedSEXP, SEXP nSEXP, SEXP bitsizeSEXP, SEXP tapsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< long long >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type bitsize(bitsizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type taps(tapsSEXP);
    rcpp_result_gen = Rcpp::wrap(lfsr_xorshift(seed, n, bitsize, taps));
    return rcpp_result_gen;
END_RCPP
}
// middlesquare
NumericVector middlesquare(int seed, int n);
RcppExport SEXP _randngen_middlesquare(SEXP seedSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(middlesquare(seed, n));
    return rcpp_result_gen;
END_RCPP
}
// mwc
NumericVector mwc(int seed, int n, long long b, long long a, long long c);
RcppExport SEXP _randngen_mwc(SEXP seedSEXP, SEXP nSEXP, SEXP bSEXP, SEXP aSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< long long >::type b(bSEXP);
    Rcpp::traits::input_parameter< long long >::type a(aSEXP);
    Rcpp::traits::input_parameter< long long >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(mwc(seed, n, b, a, c));
    return rcpp_result_gen;
END_RCPP
}
// winchmann_hill
NumericVector winchmann_hill(int seed1, int seed2, int seed3, int n);
RcppExport SEXP _randngen_winchmann_hill(SEXP seed1SEXP, SEXP seed2SEXP, SEXP seed3SEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type seed1(seed1SEXP);
    Rcpp::traits::input_parameter< int >::type seed2(seed2SEXP);
    Rcpp::traits::input_parameter< int >::type seed3(seed3SEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(winchmann_hill(seed1, seed2, seed3, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_randngen_blumb_blumb_shub", (DL_FUNC) &_randngen_blumb_blumb_shub, 4},
    {"_randngen_cmwc", (DL_FUNC) &_randngen_cmwc, 6},
    {"_randngen_icg", (DL_FUNC) &_randngen_icg, 5},
    {"_randngen_lcg", (DL_FUNC) &_randngen_lcg, 5},
    {"_randngen_lcg_internal", (DL_FUNC) &_randngen_lcg_internal, 2},
    {"_randngen_lcg_parkmiller", (DL_FUNC) &_randngen_lcg_parkmiller, 2},
    {"_randngen_lfg", (DL_FUNC) &_randngen_lfg, 5},
    {"_randngen_lfsr_fib", (DL_FUNC) &_randngen_lfsr_fib, 4},
    {"_randngen_lfsr_galois", (DL_FUNC) &_randngen_lfsr_galois, 4},
    {"_randngen_lfsr_xorshift", (DL_FUNC) &_randngen_lfsr_xorshift, 4},
    {"_randngen_middlesquare", (DL_FUNC) &_randngen_middlesquare, 2},
    {"_randngen_mwc", (DL_FUNC) &_randngen_mwc, 5},
    {"_randngen_winchmann_hill", (DL_FUNC) &_randngen_winchmann_hill, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_randngen(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
